select * from sakila.actor;
select actor_id, first_name, last_name, last_update from sakila.actor;
select actor_id, first_name as Nombre, last_name as Apellido from sakila.actor;
select * from sakila.city;
select * from sakila.customer;
select distinct (store_id) from sakila.customer;
select * from sakila.country order by country desc;
select * from sakila.customer order by first_name asc;
select * from sakila.actor where first_name = 'DAN';
select * from sakila.city where country_id=2;
select * from sakila.inventory where film_id>50;
select * from sakila.staff where staff_id<>2;
select *from sakila.language where name<>'German';


select * from sakila.country where country='Algeria' and country_id=2;
select * from sakila.country where country='Algeria' or country_id=12;
select * from sakila.language where language_id=1 or name='German';
select * from sakila.category where name='Action';
select * from sakila.category where not name='Action';
-- donde no este tal cosa, que no incluya tal cosa
select * from sakila.film where not rating='pg';
select * from sakila.customer where first_name='Mary' or first_name='Patricia';
select * from sakila.customer where first_name in ('Mary', 'Patricia');
select * from sakila.film  where special_features in ('trailers', 'Trailers Deleted Scenes') and rating in ('G', 'NC-17') and length>50;
select * from sakila.category where name not in ('Action', 'Animation', 'Children');
-- between
select * from sakila.rental where customer_id between 300 and 350;
select * from sakila.payment where amount not between 3 and 5;
-- like 
select * from sakila.actor where first_name like 'a%'  ''empiece con a''
select * from sakila.actor where first_name like 'a%' and last_name like 'b%';
-- inner join 
select f.title, f.description, f.release_year, f.language_id, l.name from sakila.film f
inner join sakila.language l on (f.language_id = l.language_id); -- ambas unidas por language_id;
select a.address as Direccion, c.city as ciudad from sakila.address a inner join sakila.city c on (a.city_id=c.city_id);
-- right join
select c.customer_id, c.first_name, c.last_name, a.actor_id from sakila.customer c right join sakila.actor a on(c.last_name=a.last_name);
-- left join
select c.customer_id, c.first_name, c.last_name, a.actor_id, a.first_name, a.last_name from sakila.customer c  left join sakila.actor a on  (c.last_name=a.last_name);
-- GROUP BY
select last_name, count(*) from sakila.actor group by last_name;
select * from sakila.payment p inner join sakila.customer c on (c.customer_id=p.customer_id);
select c.customer_id, 
c.first_name, 
c.last_name, 
sum(p.amount) from sakila.payment p inner join sakila.customer c on (c.customer_id=p.customer_id)

-- HAVING
select last_name, count(*) from sakila.actor where count(*)>3 group by 1; -- where no permite funciones de agregaciÃ³n
select last_name, count(*) from sakila.actor group by 1 having count(*)>3 ; -- va despues del gropuby

select c.customer_id, c.last_name,
 c.first_name,
 sum(p.amount)
 from sakila.payment p inner join sakila.customer c on (p.customer_id=c.customer_id)
 group by 1 having sum(p.amount)<100
 order by sum(p.amount) desc;